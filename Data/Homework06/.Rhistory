AccessionNumbersGO <- GetProteinGOInfo(accession_numbers)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings", force = TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings", force = TRUE)
BiocManager::install("GenomicAlignments", force = TRUE)
library(Biostrings)
library(msa)
library(dplyr)
library(tidyverse)
library(tidyverse)
library(genepop)
library(tidyr)
install.packages("seqinr")
library(seqinr)
library(ape)
install.packages("UniprotR")
install.packages("protti")
install.packages("r3dmol")
library(UniprotR)
library(protti)
library(r3dmol)
mySequences01 <- readDNAStringSet("Homework06/sequence01.fasta")
install.packages("UniprotR")
install.packages("UniprotR")
#Checked that directory was in place ####
getwd()
#Set Working directory for Data and Homework folder ####
setwd("GitHub/Bioinformatics/Data/Homework06/")
#Checked that directory was in place ####
getwd()
mySequences01 <- readDNAStringSet("Homework06/sequence01.fasta")
#Set Working directory for Data and Homework folder ####
setwd("GitHub/Bioinformatics/Data/Homework06/")
#Set Working directory for Data and Homework folder ####
setwd(../)
#Set Working directory for Data and Homework folder ####
setwd("../")
setwd("GitHub/Bioinformatics/Data/Homework06/")
#Checked that directory was in place ####
getwd()
setwd("GitHub/Bioinformatics/Data/Homework06/")
setwd("GitHub/Bioinformatics/Data")
#Checked that directory was in place ####
getwd()
setwd("GitHub/Bioinformatics")
#Checked that directory was in place ####
getwd()
#Set Working directory for Data and Homework folder ####
setwd("../")
setwd("GitHub/Bioinformatics/")
#Checked that directory was in place ####
getwd()
setwd("GitHub/Bioinformatics/")
setwd("Bioinformatics/")
setwd("Bioinformatics/")
#Checked that directory was in place ####
getwd()
setwd("Bioinformatics/Data/")
setwd("Bioinformatics/Data/")
#Checked that directory was in place ####
getwd()
Setwd("Data")
Setwd("Data/")
#Checked that directory was in place ####
getwd()
setwd("Bioinformatics")
setwd("Bioinformatics/")
Setwd("Data/")
#Checked that directory was in place ####
getwd()
Setwd("Data/Homework06/")
#Checked that directory was in place ####
getwd()
Setwd("Data/Homework06/")
#Set Working directory for Data and Homework folder ####
setwd("Bioinformatics/")
#Checked that directory was in place ####
getwd()
setwd("Data/")
setwd("Homework06/")
#Checked that directory was in place ####
getwd()
mySequences01 <- readDNAStringSet("Homework06/sequence01.fasta")
#Checked that directory was in place ####
getwd()
mySequences01 <- readDNAStringSet("Homework06/sequence01.fasta")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings", force = TRUE)
mySequences01 <- readDNAStringSet("Homework06/sequence01.fasta")
library(Biostrings)
mySequences01 <- readDNAStringSet("Homework06/sequence01.fasta")
mySequences01 <- readDNAStringSet("sequence01.fasta")
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("Homework06/sequence01.fasta")
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
library(msa)
library(dplyr)
library(tidyverse)
library(genepop)
library(tidyr)
install.packages("seqinr")
install.packages("seqinr")
library(seqinr)
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
aa_sequence
as.character(aa_sequence)
aa_sequence <- translate(dna_sequences)
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
library(Biostrings)
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
library(seqinr)
library(ape)
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
library(UniprotR)
library(protti)
library(protti)
library(r3dmol)
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
mySequences01 <- readDNAStringSet("sequence01.fasta")
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
mySequences01 <- readDNAStringSet("sequence01.fasta")
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
aa_sequence
aa_sequence <- translate(dna_sequences)
aa_sequence <- translate(mySequences01)
aa_sequence <- translate(dna_sequences)
mySequences01 <- readDNAStringSet("sequence01.fasta")
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
mySequences01
#### Translate DNA sequence into AA sequence ####
dna_sequences <- readDNAStringSet("sequence01.fasta")
aa_sequence <- translate(dna_sequences)
#### Translate DNA sequence into AA sequence ####
aa_sequence <- translate(mySequences01)
aa_sequence
#### Translate DNA sequence into AA sequence ####
aa_sequence <- translate(mySequences01)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings", force = TRUE)
BiocManager::install("GenomicAlignments", force = TRUE)
library(Biostrings)
#### Translate DNA sequence into AA sequence ####
aa_sequence <- translate(mySequences01)
#### Translate DNA sequence into AA sequence ####
aa_sequences <- sapply(mySequences01, function(x) translate(trimN(toString(x))))
aa_sequence
install.packages("seqinr")
install.packages("seqinr")
library(seqinr)
#### Translate DNA sequence into AA sequence ####
aa_sequences <- sapply(mySequences01, function(x) translate(trimN(toString(x))))
#### Translate DNA sequence into AA sequence ####
aa_sequences <- sapply(mySequences01, function(x) translate(trimN(toString(x))))
#### Translate DNA sequence into AA sequence ####
aa_sequence <- translate(mySequences01)
mySequences01 <- readDNAStringSet("sequence01.fasta")
mySequences01
#### Translate DNA sequence into AA sequence ####
aa_sequence <- translate(mySequences01)
#### Translate DNA sequence into AA sequence ####
aa_sequence <- translate(mySequences01)
install.packages("seqinr")
install.packages("seqinr")
library(seqinr)
#### Translate DNA sequence into AA sequence ####
aa_sequence <- translate(mySequences01)
